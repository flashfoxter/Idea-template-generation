{
  "name": "WidgetViewModelLayout",
  "description": "Manual:\n1. Do foo\n2. Do bar",
  "directory": {
    "listBaseElement": [
      {
        "templateName": "BaseWidget",
        "extension": "java",
        "mapProperties": {},
        "name": "Widget${BASE_NAME}",
        "isEnabled": true,
        "script": "",
        "writeRules": "FROM_PARENT",
        "CLASS_META_KEY": "File"
      },
      {
        "templateName": "FragmentViewModelBase",
        "extension": "java",
        "mapProperties": {},
        "name": "Widget${BASE_NAME}ViewModel",
        "isEnabled": false,
        "script": "",
        "writeRules": "FROM_PARENT",
        "CLASS_META_KEY": "File"
      },
      {
        "templateName": "BaseLayout",
        "extension": "java",
        "mapProperties": {},
        "name": "widget_${BASE_NAME}",
        "isEnabled": true,
        "script": "\nfunction  getModifiedName(name) {\n return camelCaseToDash(name);\n}\nfunction camelCaseToDash(str) {\n    return str\n        .replace(/[^a-zA-Z0-9]+/g, \u0027-\u0027)\n        .replace(/([A-Z]+)([A-Z][a-z])/g, \u0027$1-$2\u0027)\n        .replace(/([a-z])([A-Z])/g, \u0027$1-$2\u0027)\n        .replace(/([0-9])([^0-9])/g, \u0027$1-$2\u0027)\n        .replace(/([^0-9])([0-9])/g, \u0027$1-$2\u0027)\n        .replace(/-+/g, \u0027_\u0027)\n        .toLowerCase();\n}",
        "customPath": {
          "listSearchAction": [
            {
              "actionType": "DIR_ABOVE",
              "name": "main",
              "deepLimit": -1,
              "isRegexp": false
            },
            {
              "actionType": "DIR_BELOW",
              "name": "res",
              "deepLimit": -1,
              "isRegexp": false
            },
            {
              "actionType": "DIR_BELOW",
              "name": "layout",
              "deepLimit": -1,
              "isRegexp": false
            }
          ]
        },
        "writeRules": "FROM_PARENT",
        "CLASS_META_KEY": "File"
      }
    ],
    "name": "${BASE_NAME}",
    "isEnabled": true,
    "script": "",
    "writeRules": "USE_EXISTING"
  },
  "mapGlobalVars": {},
  "listGlobalVariable": [
    {
      "name": "BASE_NAME",
      "isEnabled": true,
      "script": "",
      "value": "14"
    }
  ],
  "listTextInjection": [],
  "skipRootDirectory": true,
  "skipDefiningNames": false,
  "shouldRegisterAction": false,
  "shouldShowReport": false,
  "fileTemplateSource": "DEFAULT_ONLY"
}